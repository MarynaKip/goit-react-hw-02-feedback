{"version":3,"sources":["components/FeedbackOptions/index.jsx","components/Statistics/index.jsx","components/Section/index.jsx","components/Notification/index.jsx","App.js","index.js"],"names":["FeedbackOptions","options","onLeaveFeedback","className","map","option","name","type","onClick","Statistics","good","neutral","bad","total","positivePercentage","Section","title","children","Notification","App","state","props","initialValue","handleIncrement","e","setState","prevState","target","this","countTotalFeedback","Object","keys","values","some","value","message","Component","defaultProps","ReactDOM","render","document","getElementById"],"mappings":"8SAgBeA,EAdS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACtB,qBAAKC,UAAU,kBAAf,SACGF,EAAQG,KAAI,SAACC,GAAD,OACX,wBACEC,KAAMD,EAENE,KAAK,SACLC,QAASN,EAJX,SAMGG,GAJIA,SCIEI,EAXI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,qCACG,IACD,uCAAUJ,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,EAAvB,OAAgD,QCArCC,EAPC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,qCACE,6BAAKD,IACJC,MCDUC,EAFM,SAAC,GAAD,IAAGF,EAAH,EAAGA,MAAH,OAAe,6BAAKA,KCOnCG,E,4MAOJC,MAAQ,CACNV,KAAM,EAAKW,MAAMC,aACjBX,QAAS,EAAKU,MAAMC,aACpBV,IAAK,EAAKS,MAAMC,c,EAGlBC,gBAAkB,SAACC,GACjB,EAAKC,UAAS,SAACC,GACb,OAAO,eAAGF,EAAEG,OAAOrB,KAAOoB,EAAUF,EAAEG,OAAOrB,MAAQ,O,4CAIzD,WAAU,IAAD,EACwBsB,KAAKR,MAA5BV,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IAEjBiB,EAAqB,kBAAMnB,EAAOC,EAAUC,GAU5CX,EAAU6B,OAAOC,KAAKH,KAAKR,OAGjC,OACE,qCACE,cAAC,EAAD,CAASJ,MAAM,wBAAf,SACE,cAAC,EAAD,CACEf,QAASA,EACTC,gBAAiB0B,KAAKL,oBAI1B,cAAC,EAAD,CAASP,MAAM,aAAf,SACGc,OAAOE,OAAOJ,KAAKR,OAAOa,MAAK,SAACC,GAAD,OAAqB,IAAVA,KACzC,cAAC,EAAD,CACExB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOgB,IACPf,mBA1BqB,IAAzBe,IACK,GAGDnB,EAAOmB,IAAwB,MAyBjC,cAAC,EAAD,CAAcM,QAAQ,+B,GAtDhBC,aAAZjB,EACGkB,aAAe,CACpBf,aAAc,GA4DHH,QChEfmB,IAASC,OACP,cAAC,EAAD,IAEAC,SAASC,eAAe,W","file":"static/js/main.af409d5f.chunk.js","sourcesContent":["import \"./FeedbackOptions.css\";\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\r\n  <div className=\"FeedbackOptions\">\r\n    {options.map((option) => (\r\n      <button\r\n        name={option}\r\n        key={option}\r\n        type=\"button\"\r\n        onClick={onLeaveFeedback}\r\n      >\r\n        {option}\r\n      </button>\r\n    ))}\r\n  </div>\r\n);\r\nexport default FeedbackOptions;\r\n","const Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\r\n  <>\r\n    {\" \"}\r\n    <p>Good: {good}</p>\r\n    <p>Neutral: {neutral}</p>\r\n    <p>Bad: {bad}</p>\r\n    <p>Total: {total}</p>\r\n    <p>Positive feedback: {positivePercentage}%</p>{\" \"}\r\n  </>\r\n);\r\n\r\nexport default Statistics;\r\n","const Section = ({ title, children }) => (\r\n  <>\r\n    <h1>{title}</h1>\r\n    {children}\r\n  </>\r\n);\r\n\r\nexport default Section;\r\n","const Notification = ({ title }) => <h3>{title}</h3>;\r\n\r\nexport default Notification;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport FeedbackOptions from \"./components/FeedbackOptions\";\nimport Statistics from \"./components/Statistics\";\nimport Section from \"./components/Section\";\nimport Notification from \"./components/Notification\";\n\nclass App extends Component {\n  static defaultProps = {\n    initialValue: 0,\n  };\n\n  static propTypes = {};\n\n  state = {\n    good: this.props.initialValue,\n    neutral: this.props.initialValue,\n    bad: this.props.initialValue,\n  };\n\n  handleIncrement = (e) => {\n    this.setState((prevState) => {\n      return { [e.target.name]: prevState[e.target.name] + 1 };\n    });\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n\n    const countTotalFeedback = () => good + neutral + bad;\n\n    const countPositiveFeedbackPercentage = () => {\n      if (countTotalFeedback() === 0) {\n        return \"\";\n      }\n\n      return (good / countTotalFeedback()) * 100;\n    };\n\n    const options = Object.keys(this.state);\n    //const values = Object.values(this.state);\n\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={options}\n            onLeaveFeedback={this.handleIncrement}\n          ></FeedbackOptions>\n        </Section>\n\n        <Section title=\"Statistics\">\n          {Object.values(this.state).some((value) => value !== 0) ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={countTotalFeedback()}\n              positivePercentage={countPositiveFeedbackPercentage()}\n            ></Statistics>\n          ) : (\n            <Notification message=\"No feedback given\"></Notification>\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <App />,\n\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}